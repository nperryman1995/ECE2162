// This trace has true and false data dependencies (RAW WAR and WAW) in the integer and floating point data paths in a loop (benchmark 5.1 with branch prediction)
// This trace assumes there is branch prediction (all predictions initially default to 0 i.e. not taken)
// note: all functional units are set to 1 cycle execution in order to avoid collisions at the CDB

// Input file start
4 1 0 1
4 1 0 1
4 1 0 1
4 1 4 1
128 1
4 3 0
8
R2 2
R3 3
R4 3
R5 1
F1 1.1
F2 2.2
F3 3.3
Add R1, R0, R2
Add R1, R1, R3
Addi R1, R1, 77
Add.d F4, F1, F2
Mult.d F4, F4, F1
Add.d F4, F4, F3
Sub R4, R4, R5
Bne R4, R0, -8
// Input file end

// Expected trace
---- Instruction ----|---- PC ----|---- ISSUE ----|---- EX ----|---- MEM ----|---- WB ----|---- COMMIT ----|
Add R1, R0, R2       | 0x00000000 | 1             | 2          | X           | 3          | 4              |
Add R1, R1, R3       | 0x00000004 | 2             | 4          | X           | 5          | 6              |
Addi R1, R1, 77      | 0x00000008 | 3             | 6          | X           | 7          | 8              |
Add.d F4, F1, F2     | 0x0000000C | 4             | 5          | X           | 6          | 9              |
Mult.d F4, F4, F1    | 0x00000010 | 5             | 7          | X           | 8          | 10             |
Add.d F4, F4, F3     | 0x00000014 | 6             | 9          | X           | 10         | 11             |
Sub R4, R4, R5       | 0x00000018 | 7             | 8          | X           | 9          | 12             |
Bne R4, R0, -8       | 0x0000001C | 8             | 10         | X           | X          | 13             | -- predicted wrong

Add R1, R0, R2       | 0x00000000 | 12            | 13         | X           | 14         | 15             |
Add R1, R1, R3       | 0x00000004 | 13            | 15         | X           | 16         | 17             |
Addi R1, R1, 77      | 0x00000008 | 14            | 17         | X           | 18         | 19             |
Add.d F4, F1, F2     | 0x0000000C | 15            | 16         | X           | 17         | 20             |
Mult.d F4, F4, F1    | 0x00000010 | 16            | 18         | X           | 19         | 21             |
Add.d F4, F4, F3     | 0x00000014 | 17            | 20         | X           | 21         | 22             |
Sub R4, R4, R5       | 0x00000018 | 18            | 19         | X           | 20         | 23             |
Bne R4, R0, -8       | 0x0000001C | 19            | 21         | X           | X          | 24             | -- predicted correct

Add R1, R0, R2       | 0x00000000 | 20            | 21         | X           | 22         | 25             |
Add R1, R1, R3       | 0x00000004 | 21            | 23         | X           | 24         | 26             |
Addi R1, R1, 77      | 0x00000008 | 22            | 25         | X           | 26         | 27             |
Add.d F4, F1, F2     | 0x0000000C | 23            | 24         | X           | 25         | 28             |
Mult.d F4, F4, F1    | 0x00000010 | 24            | 26         | X           | 27         | 29             |
Add.d F4, F4, F3     | 0x00000014 | 25            | 28         | X           | 29         | 30             |
Sub R4, R4, R5       | 0x00000018 | 26            | 27         | X           | 28         | 31             |
Bne R4, R0, -8       | 0x0000001C | 27            | 28         | X           | X          | 32             | -- predicted wrong

// Non zero int registers
R1 82
R2 2
R3 3
R4 0

// Non zero float registers
F1 1.1
F2 2.2
F3 3.3
F4 6.93

// Non zero mem locations
